// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	rand "math/rand"

	mock "github.com/stretchr/testify/mock"
)

// Shortener is an autogenerated mock type for the Shortener type
type Shortener struct {
	mock.Mock
}

// ShortenURL provides a mock function with given fields: n, src
func (_m *Shortener) ShortenURL(n int, src rand.Source) string {
	ret := _m.Called(n, src)

	if len(ret) == 0 {
		panic("no return value specified for ShortenURL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(int, rand.Source) string); ok {
		r0 = rf(n, src)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewShortener creates a new instance of Shortener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewShortener(t interface {
	mock.TestingT
	Cleanup(func())
}) *Shortener {
	mock := &Shortener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
